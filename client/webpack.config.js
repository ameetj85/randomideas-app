const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

// Uses Common JS syntax

module.exports = {
  mode: 'production',
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, '../public'),
    filename: 'bundle.js',
  },
  devServer: {
    // webpack dev server config
    static: {
      directory: path.resolve(__dirname, '../public'), // where to server from
    },
    port: 3000, // what port to serve on
    open: true,
    hot: true, // hot reload
    compress: true,
    historyApiFallback: true,
    proxy: {
      '/api': 'http://localhost:5000',
    },
  },
  module: {
    rules: [
      // configure loaders
      {
        test: /\.css$/, // get any file that ends with css
        use: [MiniCssExtractPlugin.loader, 'css-loader'], // MiniCssExtractPlugin extracts css and creates main.css in dist
      },
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['@babel/preset-env'],
          },
        },
      },
    ],
  },
  plugins: [
    new MiniCssExtractPlugin(),
    // set up the html webpack plugin
    new HtmlWebpackPlugin({
      title: 'Webpack App',
      filename: 'index.html',
      template: './src/index.html', // this defines what the webpage should look like when regenerated by webpack.
    }),
  ],
};
